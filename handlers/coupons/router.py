from typing import Any

from aiogram import F, Router
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.types import CallbackQuery, Message

from database import (
    check_coupon_usage,
    create_coupon_usage,
    get_coupon_by_code,
    update_balance,
    update_coupon_usage_count,
)
from handlers.utils import edit_or_send_message
from keyboards.coupons import get_coupon_keyboard


class CouponActivationState(StatesGroup):
    waiting_for_coupon_code = State()


router = Router()


@router.callback_query(F.data == "activate_coupon")
@router.message(F.text == "/activate_coupon")
async def handle_activate_coupon(state: FSMContext, target_message: Message):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏—é –∫—É–ø–æ–Ω–∞.

    Args:
        state: –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è FSM.
        chat_id: ID —á–∞—Ç–∞ (–¥–æ–±–∞–≤–ª–µ–Ω–æ middleware).
        target_message: –¶–µ–ª–µ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–≤–µ—Ç–∞ (–¥–æ–±–∞–≤–ª–µ–Ω–æ middleware).
    """
    builder = get_coupon_keyboard()

    await edit_or_send_message(
        target_message=target_message,
        text="<b>üé´ –í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –∫—É–ø–æ–Ω–∞:</b>\n\n"
        "üìù –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–µ–π—Å—Ç–≤—É—é—â–∏–π –∫–æ–¥ –∫—É–ø–æ–Ω–∞, –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ö–æ—Ç–∏—Ç–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å. üîë",
        reply_markup=builder.as_markup(),
        media_path=None,
    )
    await state.set_state(CouponActivationState.waiting_for_coupon_code)


@router.message(CouponActivationState.waiting_for_coupon_code)
async def process_coupon_code(message: Message, state: FSMContext, session: Any, chat_id: int):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–µ–¥–µ–Ω–Ω—ã–π –∫–æ–¥ –∫—É–ø–æ–Ω–∞.

    Args:
        message: –°–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–æ–¥–æ–º –∫—É–ø–æ–Ω–∞.
        state: –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è FSM.
        session: –°–µ—Å—Å–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.
        chat_id: ID —á–∞—Ç–∞ (–¥–æ–±–∞–≤–ª–µ–Ω–æ middleware).
    """
    coupon_code = message.text.strip()
    activation_result = await activate_coupon(chat_id, coupon_code, session)

    builder = get_coupon_keyboard()

    await message.answer(activation_result, reply_markup=builder.as_markup())
    await state.clear()


async def activate_coupon(user_id: int, coupon_code: str, session: Any) -> str:
    """
    –ê–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –∫—É–ø–æ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    Args:
        user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        coupon_code: –ö–æ–¥ –∫—É–ø–æ–Ω–∞.
        session: –°–µ—Å—Å–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.

    Returns:
        str: –°–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏.
    """
    coupon_record = await get_coupon_by_code(coupon_code, session)

    if not coupon_record:
        return "<b>‚ùå –ö—É–ø–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω</b> üö´ –∏–ª–∏ –µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–æ. üîí –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–¥ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞. üîç"

    usage_exists = await check_coupon_usage(coupon_record["id"], user_id, session)

    if usage_exists:
        return "<b>‚ùå –í—ã —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ —ç—Ç–æ—Ç –∫—É–ø–æ–Ω.</b> üö´ –ö—É–ø–æ–Ω—ã –º–æ–≥—É—Ç –±—ã—Ç—å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑. üîí"

    coupon_amount = coupon_record["amount"]

    await update_coupon_usage_count(coupon_record["id"], session)
    await create_coupon_usage(coupon_record["id"], user_id, session)

    await update_balance(user_id, coupon_amount, session)
    return f"<b>‚úÖ –ö—É–ø–æ–Ω —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω! üéâ</b>\n\n–ù–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å –¥–æ–±–∞–≤–ª–µ–Ω–æ <b>{coupon_amount} —Ä—É–±–ª–µ–π</b> üí∞."
